/*
 * DeliveryOrderDialog.java
 *
 * Created on 5. Oktober 2005, 18:01
 */

package ecobill.module.base.ui.deliveryorder;

import ecobill.module.base.domain.ReduplicatedArticle;
import ecobill.module.base.domain.Article;
import ecobill.core.system.Internationalization;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 *
 * @author  Roman Georg Rädle
 */
public class DeliveryOrderDialog extends JDialog implements Internationalization {

    private DeliveryOrderUI deliveryOrderUI;

    private Article article;

    public DeliveryOrderDialog(Frame owner, DeliveryOrderUI deliveryOrderUI, Article article, boolean modal) throws HeadlessException {
        super(owner, article.getArticleNumber(), modal);

        this.deliveryOrderUI = deliveryOrderUI;
        this.article = article;

        initComponents();
        initLayout();

        reinitI18N();
    }

    /** Creates new form DeliveryOrderDialog */
    public DeliveryOrderDialog() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
    private void initComponents() {
        quantityL = new javax.swing.JLabel();
        quantity = new javax.swing.JSpinner(new SpinnerNumberModel(0D, 0D, Double.MAX_VALUE, 0.01));
        unitL = new javax.swing.JLabel();
        unit = new javax.swing.JTextField();
        priceL = new javax.swing.JLabel();
        price = new javax.swing.JSpinner(new SpinnerNumberModel(0D, 0D, Double.MAX_VALUE, 0.01));
        labellingScrollPane = new javax.swing.JScrollPane();
        labelling = new javax.swing.JTextArea();
        labellingL = new javax.swing.JLabel();
        cancel = new javax.swing.JButton("Abbrechen");
        ok = new javax.swing.JButton("OK");

        quantityL.setText("Menge");

        quantity.setMinimumSize(new java.awt.Dimension(80, 20));
        quantity.setPreferredSize(new java.awt.Dimension(80, 20));

        unitL.setText("Einheit");

        unit.setMinimumSize(new java.awt.Dimension(80, 20));
        unit.setPreferredSize(new java.awt.Dimension(80, 20));

        priceL.setText("Preis");

        price.setMinimumSize(new java.awt.Dimension(80, 20));
        price.setPreferredSize(new java.awt.Dimension(80, 20));

        labelling.setWrapStyleWord(true);
        labelling.setLineWrap(true);
        labelling.setColumns(20);
        labelling.setRows(5);
        labellingScrollPane.setViewportView(labelling);

        labellingL.setText("Bezeichnung");

        cancel.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                DeliveryOrderDialog.this.dispose();
            }
        });

        ok.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {

                ReduplicatedArticle reduplicatedArticle = new ReduplicatedArticle();
                reduplicatedArticle.setArticleNumber(article.getArticleNumber());
                reduplicatedArticle.setDescription(labelling.getText());
                reduplicatedArticle.setPrice((Double) price.getValue());
                reduplicatedArticle.setUnit(unit.getText());
                reduplicatedArticle.setQuantity((Double) quantity.getValue());

                deliveryOrderUI.addReduplicatedArticle(reduplicatedArticle);

                DeliveryOrderDialog.this.dispose();
            }
        });
    }

    private void initLayout() {

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this.getContentPane());

        this.getContentPane().setLayout(layout);

        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(quantityL)
                            .add(quantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(6, 6, 6)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(unitL)
                            .add(unit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(priceL)
                            .add(price, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(ok)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancel))
                    .add(labellingL)
                    .add(labellingScrollPane))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {cancel, ok}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(quantityL)
                    .add(unitL)
                    .add(priceL))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(quantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(price, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(unit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20)
                .add(labellingL)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(labellingScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(25, 25, 25)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancel)
                    .add(ok))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        this.setPreferredSize(new Dimension(280, 275));
        this.setSize(new Dimension(280, 275));
    }

    /**
     * @see ecobill.core.system.Internationalization#reinitI18N()
     */
    public void reinitI18N() {

        price.setValue(article.getPrice());
        unit.setText(article.getUnit().toString());
        labelling.setText(article.getLocalizedDescription());
    }

    private javax.swing.JButton cancel;
    private javax.swing.JTextArea labelling;
    private javax.swing.JLabel labellingL;
    private javax.swing.JScrollPane labellingScrollPane;
    private javax.swing.JButton ok;
    private javax.swing.JSpinner price;
    private javax.swing.JLabel priceL;
    private javax.swing.JSpinner quantity;
    private javax.swing.JLabel quantityL;
    private javax.swing.JTextField unit;
    private javax.swing.JLabel unitL;
}
